import telebot
from telebot import types

TOKEN = ""

bot = telebot.TeleBot(TOKEN)

users_dict = {}
house = ('https://www.youtube.com/watch?v=Gp_JII49NCk&ab_channel=%D0%A8%D0%9A%D0%9E%D0%9B%D0%90%D0%A1%D0%A3%D0%A7%D0'
         '%90%D0%A1%D0%9D%D0%98%D0%A5%D0%A2%D0%90%D0%9D%D0%A6%D0%86%D0%92%E2%97%BE%EF%B8%8FONTOP%E2%97%BE%EF%B8%8F')


@bot.message_handler(commands=['start'])
def send_start_message(message):
    chat_id = message.chat.id
    keyboard = types.InlineKeyboardMarkup()

    appointment_button = types.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ üï∫",
                                                    callback_data=f"appointment_{chat_id}")
    about_iskra_button = types.InlineKeyboardButton(text="–ü–æ—á–µ–º—É –í—ã –¥–æ–ª–∂–Ω—ã –≤—ã–±—Ä–∞—Ç—å –∏–º–µ–Ω–Ω–æ –ò—Å–∫—Ä—É? üí´",
                                                    callback_data=f"about_iskra_{chat_id}")

    keyboard.row(appointment_button)
    keyboard.row(about_iskra_button)

    bot.send_message(message.chat.id,
                     f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>! \n"
                     "–Ø –±–æ—Ç —Ç–∞–Ω—Ü–µ–≤–∞–ª—å–Ω–æ–π —Å—Ç—É–¥–∏–∏ '–ò—Å–∫—Ä–∞' –≤ –ù–∏–∂–Ω–µ–º –ù–æ–≤–≥–æ—Ä–æ–¥–µ.üí• \n"
                     "–í–ø–µ—Ä–≤—ã–µ —É –Ω–∞—Å? \n"
                     "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–µ—Ä–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ –∏ –ø–æ–¥–±–µ—Ä—É –≥—Ä—É–ø–ø—É, –∏—Å—Ö–æ–¥—è –∏–∑ —Ç–≤–æ–µ–≥–æ –æ–ø—ã—Ç–∞ –∏ –≤–∫—É—Å–æ–≤! \n",
                     parse_mode='html',
                     reply_markup=keyboard)


def save_fio(message):
    chat_id = message.chat.id
    fio = message.text
    if chat_id not in users_dict:
        users_dict[chat_id] = {}

    users_dict[chat_id]['–§–ò–û'] = fio
    bot.send_message(chat_id,
                     f"–û—Ç–ª–∏—á–Ω–æ, <b>{fio}</b>! –¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω.",
                     parse_mode='html')
    bot.register_next_step_handler(message, save_phone)


def save_experience(message):
    chat_id = message.chat.id
    keyboard = types.InlineKeyboardMarkup()
    one_button = types.InlineKeyboardButton(text="<1 –≥–æ–¥–∞",
                                            callback_data=f"one_{chat_id}")
    one_to_three_button = types.InlineKeyboardButton(text="–æ—Ç 1 –¥–æ 3 –ª–µ—Ç",
                                                     callback_data=f"1_3_{chat_id}")
    more_than_three_button = types.InlineKeyboardButton(text=">3 –ª–µ—Ç",
                                                        callback_data=f"3_{chat_id}")
    never_button = types.InlineKeyboardButton(text="–ù–µ –∑–∞–Ω–∏–º–∞–ª—Å—è/–ù–µ –∑–∞–Ω–∏–º–∞–ª–∞—Å—å —Ç–∞–Ω—Ü–∞–º–∏",
                                              callback_data=f"never_{chat_id}")
    keyboard.add(one_button, one_to_three_button, more_than_three_button, never_button)
    bot.send_message(chat_id,
                     f"–ó–∞–Ω–∏–º–∞–ª–∏—Å—å –ª–∏ –í—ã —Ç–∞–Ω—Ü–∞–º–∏ —Ä–∞–Ω—å—à–µ? –ï—Å–ª–∏ –¥–∞, —Ç–æ —Å–∫–æ–ª—å–∫–æ?",
                     parse_mode='html',
                     reply_markup=keyboard)
    bot.register_next_step_handler(message, save_status)


def save_fio_child(message):
    chat_id = message.chat.id
    fio = message.text
    users_dict[chat_id]['–§–ò–û_—Ä–µ–±–µ–Ω–∫–∞'] = fio
    bot.send_message(chat_id,
                     f"–û—Ç–ª–∏—á–Ω–æ, –∑–∞–ø–∏—Å–∞–ª–∏ <b>{fio}</b>!",
                     parse_mode='html')
    save_experience(message)


def save_phone(message):
    chat_id = message.chat.id
    phone = message.text
    users_dict[chat_id]['–ù–æ–º–µ—Ä'] = phone

    keyboard = types.InlineKeyboardMarkup()
    me_button = types.InlineKeyboardButton(text="–Ø —Ö–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è —Å–∞–º –Ω–∞ –∑–∞–Ω—è—Ç–∏–µüôéüèª‚Äç‚ôÇÔ∏èüôçüèº‚Äç‚ôÄÔ∏è",
                                           callback_data=f"me_{chat_id}")
    child_button = types.InlineKeyboardButton(text="–Ø —Ö–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ —Ä–µ–±–µ–Ω–∫–∞ üë©‚Äçüëßüë®‚Äçüëß",
                                              callback_data=f"child_{chat_id}")
    keyboard.row(me_button)
    keyboard.row(child_button)
    bot.send_message(chat_id,
                     f"–í—ã –≤–≤–µ–ª–∏ <b>{phone}</b>.",
                     parse_mode='html')
    bot.send_message(chat_id,
                     "–ù–∏–∂–µ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π üîΩ",
                     parse_mode='html',
                     reply_markup=keyboard)


def save_status(message):
    chat_id = message.chat.id
    keyboard = types.InlineKeyboardMarkup()
    yes_button = types.InlineKeyboardButton(text="–î–ê‚òëÔ∏è",
                                            callback_data=f"yes_{chat_id}")
    no_button = types.InlineKeyboardButton(text="–ù–ï–¢‚ûñ",
                                           callback_data=f"no_{chat_id}")
    keyboard.add(yes_button, no_button)
    bot.send_message(chat_id,
                     "–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å. –í—ã –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç–µ—Å—å –∫ –Ω–∞–º –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ –≤–ø–µ—Ä–≤—ã–µ?",
                     parse_mode='html',
                     reply_markup=keyboard)


def recommend_group(message):
    chat_id = message.chat.id
    keyboard = types.InlineKeyboardMarkup()
    group = ["–•–∏–ø —Ö–æ–ø —Å –Ω—É–ª—è 13+", '–•–∞—É—Å', 'Krump', '–í–æ–≥']
    for name in group:
        keyboard.add(types.InlineKeyboardButton(text=name, callback_data=name))
    bot.send_message(chat_id,
                     "–í–∞–º –ø–æ–¥–æ–π–¥—É—Ç —Å–ª–µ–¥—É—é—â–∏–µ –≥—Ä—É–ø–ø—ã: \n"
                     "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–µ–ª–∏ –±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è \n"
                     "–ü—Ä–æ –∫–∞–∂–¥—ã–π –∏–∑ —Å—Ç–∏–ª–µ–π –º–æ–∂–Ω–æ –ø–æ—á–∏—Ç–∞—Ç—å –≤–æ—Ç —Ç—É—Ç\n"
                     f"<b>–•–ê–£–°</b> - {house} –≠—Ç–æ—Ç —Ç–∞–Ω–µ—Ü –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –º–∞–Ω–µ—Ä–æ–π –∏ –¥–∏–Ω–∞–º–∏–∫–æ–π –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è. –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π "
                     "—Ö–∞—É—Å ‚Äì —ç—Ç–æ"
                     "–±—ã—Å—Ç—Ä—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è –Ω–æ–≥, –Ω–∞–ø–æ–º–∏–Ω–∞—é—â–∏–µ —Å—Ç–µ–ø, —á–µ—á–µ—Ç–∫—É, —à–∞–≥–∏ —Å–∞–ª—å—Å—ã –∏ –ª–∞—Ç–∏–Ω—ã, –≤ —Å–æ—á–µ—Ç–∞–Ω–∏–∏ —Å "
                     "–ø–ª–∞–≤–Ω—ã–º–∏, –∞–±—Å–æ–ª—é—Ç–Ω–æ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–Ω—ã–º–∏ –¥–≤–∏–∂–µ–Ω–∏—è–º–∏ –∫–æ—Ä–ø—É—Å–æ–º –∏ –≥–æ–ª–æ–≤–æ–π. \n",
                     parse_mode='html',
                     reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    chat_id = call.message.chat.id
    if call.data.startswith('appointment_'):
        bot.send_message(chat_id,
                         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –§–ò–û",
                         parse_mode='html')
        bot.answer_callback_query(call.id)
        bot.register_next_step_handler(call.message, save_fio)
    elif call.data.startswith('me_'):
        users_dict[chat_id]['–ó–∞–ø–∏—Å—å'] = "–Ø —Ö–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è —Å–∞–º –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ"
        bot.answer_callback_query(call.id)
        save_experience(call.message)
    elif call.data.startswith('child_'):
        users_dict[chat_id]['–ó–∞–ø–∏—Å—å'] = "–Ø —Ö–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å —Ä–µ–±–µ–Ω–∫–∞ –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ"
        bot.send_message(chat_id,
                         f"–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –§–ò–û –≤–∞—à–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞!",
                         parse_mode='html')
        bot.answer_callback_query(call.id)
        bot.register_next_step_handler(call.message, save_fio_child)
    elif call.data.startswith('one_'):
        users_dict[chat_id]['–û–ø—ã—Ç'] = "–º–µ–Ω—å—à–µ –≥–æ–¥–∞"
        bot.answer_callback_query(call.id)
        save_status(call.message)
    elif call.data.startswith('1_3_'):
        users_dict[chat_id]['–û–ø—ã—Ç'] = "1-3 –≥–æ–¥–∞"
        bot.answer_callback_query(call.id)
        save_status(call.message)
    elif call.data.startswith('3_'):
        users_dict[chat_id]['–û–ø—ã—Ç'] = "–±–æ–ª—å—à–µ 3 –ª–µ—Ç"
        bot.answer_callback_query(call.id)
        save_status(call.message)
    elif call.data.startswith('never_'):
        users_dict[chat_id]['–û–ø—ã—Ç'] = "–Ω–∏–∫–æ–≥–¥–∞"
        bot.answer_callback_query(call.id)
        save_status(call.message)
    elif call.data.startswith('yes_'):
        users_dict[chat_id]['–ë—ã–≤–∞–ª–∏ —É –Ω–∞—Å?'] = "–î–ê!"
        bot.answer_callback_query(call.id)
        recommend_group(call.message)
    elif call.data.startswith('no_'):
        users_dict[chat_id]['–ë—ã–≤–∞–ª–∏ —É –Ω–∞—Å?'] = "–ù–ï–¢("
        bot.answer_callback_query(call.id)
        recommend_group(call.message)


bot.polling()
